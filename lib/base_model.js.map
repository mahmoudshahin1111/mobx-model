{"version":3,"file":"base_model.js","names":["_mobx","require","_inflection","_filter","_interopRequireDefault","_uniqueId","_result","_init_attributes","_set_attributes","_init_relations","_set_relations","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","String","r","e","Symbol","toPrimitive","call","TypeError","Number","initObservables","target","observables","isObservableArray","collection","extendObservable","observable","shallow","BaseModel","addClassAction","actionName","method","get","bind","addAction","prototype","constructor","options","arguments","length","undefined","modelJson","topLevelJson","requestId","id","initAttributes","model","initRelations","onInitialize","set","uniqueId","lastSetRequestId","transaction","setAttributes","setRelations","urlRoot","jsonKey","onDestroy","removeSelfFromCollection","destroyDependentRelations","removeSelfFromRelations","remove","relationsToDestroy","filter","relations","relation","reverseRelation","forEach","isHasMany","propertyName","slice","relatedModel","isHasOne","relationsToRemoveFrom","removeMethodName","toJSON","attributes","attributeValues","keys","reduce","values","attributeName","relationValues","_ref","type","foreignKey","camelizedForeignKey","camelize","map","items","result","l","toString","push","splice","indexOf","_urlRoot","tableize","modelName","name","_jsonKey","underscore","_default","exports"],"sources":["../src/base_model.js"],"sourcesContent":["import {\n    transaction,\n    extendObservable,\n    isObservableArray,\n    observable\n} from \"mobx\";\nimport { tableize, underscore, camelize } from \"inflection\";\nimport filter from \"lodash/filter\";\nimport uniqueId from \"lodash/uniqueId\";\nimport result from \"lodash/result\";\n\nimport initAttributes from \"./init_attributes\";\nimport setAttributes from \"./set_attributes\";\nimport initRelations from \"./init_relations\";\nimport setRelations from \"./set_relations\";\n\n/*\n * This is a hack to allow each model that extends\n * BaseModel to have its own observable collection. Model is\n * assigned an observable collection when first instance of model is\n * created or when Model.all() method is called\n */\nconst initObservables = function(target) {\n    if (\n        !target.observables ||\n        !isObservableArray(target.observables.collection)\n    ) {\n        target.observables = {};\n        extendObservable(target.observables, {\n            collection: observable.shallow([])\n        });\n    }\n};\n\nclass BaseModel {\n    static attributes = {};\n    static relations = [];\n    // static observables = {};\n\n    id = null;\n    lastSetRequestId = null;\n\n    // static config = function(options = {}) {\n    //   let { models } = options;\n    //   this.models = models;\n    // };\n\n    /*\n   * NOTE: we access internal mobservable array of values to\n   * prevent notifying observers when we're just getting single\n   * value. This way we'll prevent re-rendering components displaying\n   * single model when collection changes\n   */\n    static get = function(id) {\n        let items = result(this, \"observables.$mobx.values.collection.value\");\n        if (items && isObservableArray(items)) {\n            let l = items.length;\n            for (var i = 0; i < l; i++) {\n                if (items[i].id.toString() === id.toString()) return items[i];\n            }\n        }\n\n        return null;\n    };\n\n    static set = function(options = {}) {\n        // console.log('set static', this.name)\n\n        let { modelJson, topLevelJson, requestId } = options;\n\n        /*\n      requestId is used to allow models to \n      prevent loops when setting same attributes\n      multiple times, we set one if none is set\n     */\n        if (!requestId) requestId = uniqueId(\"request_\");\n\n        /*\n     * topLevelJson is used to get json for models referenced by ids\n     */\n        if (!topLevelJson) topLevelJson = modelJson;\n\n        let model = this.get(modelJson.id);\n\n        transaction(() => {\n            if (!model) {\n                model = new this({\n                    modelJson,\n                    topLevelJson,\n                    requestId\n                });\n\n                this.observables.collection.push(model);\n            }\n\n            model.set({ modelJson, topLevelJson, requestId });\n        });\n\n        // console.log('set', model)\n\n        return model;\n    };\n\n    static remove = function(model) {\n        if (\n            this.observables &&\n            isObservableArray(this.observables.collection)\n        ) {\n            this.observables.collection.splice(\n                this.observables.collection.indexOf(model),\n                1\n            );\n        }\n    };\n\n    static all = function() {\n        initObservables(this);\n        return this.observables.collection.slice();\n    };\n\n    static addClassAction(actionName, method) {\n        Object.defineProperty(this, actionName, {\n            get: function() {\n                return method.bind(this);\n            },\n            configurable: true\n        });\n    }\n\n    static addAction(actionName, method) {\n        Object.defineProperty(this.prototype, actionName, {\n            get: function() {\n                return method.bind(this);\n            },\n            configurable: true\n        });\n    }\n\n    constructor(options = {}) {\n        let { modelJson, topLevelJson, requestId } = options;\n\n        initObservables(this.constructor);\n\n        if (modelJson && modelJson.id) {\n            this.id = modelJson.id;\n        }\n\n        initAttributes({ model: this });\n        initRelations({ model: this });\n\n        this.onInitialize();\n    }\n\n    set(options = {}) {\n        let { requestId, modelJson, topLevelJson } = options;\n        let model = this;\n\n        if (!requestId) requestId = uniqueId(\"request_\");\n\n        if (this.lastSetRequestId === requestId) {\n            return;\n        } else {\n            this.lastSetRequestId = requestId;\n        }\n\n        transaction(() => {\n            setAttributes({ model, modelJson });\n\n            setRelations({\n                model,\n                requestId,\n                modelJson,\n                topLevelJson\n            });\n        });\n    }\n\n    get urlRoot() {\n        return this.constructor.urlRoot;\n    }\n\n    get jsonKey() {\n        return this.constructor.jsonKey;\n    }\n\n    onInitialize() {}\n\n    onDestroy() {\n        transaction(() => {\n            this.removeSelfFromCollection();\n            this.destroyDependentRelations();\n            this.removeSelfFromRelations();\n        });\n    }\n\n    removeSelfFromCollection() {\n        this.constructor.remove(this);\n    }\n\n    destroyDependentRelations() {\n        let relationsToDestroy = filter(\n            this.constructor.relations,\n            relation => {\n                let reverseRelation = relation.reverseRelation;\n                return (\n                    reverseRelation &&\n                    reverseRelation.onDestroy === \"destroyRelation\"\n                );\n            }\n        );\n\n        relationsToDestroy.forEach(relation => {\n            if (relation.isHasMany) {\n                this[relation.propertyName].slice().forEach(relatedModel => {\n                    relatedModel.onDestroy();\n                });\n            } else if (relation.isHasOne) {\n                this[relation.propertyName].onDestroy();\n            }\n        });\n    }\n\n    removeSelfFromRelations() {\n        let relationsToRemoveFrom = filter(\n            this.constructor.relations,\n            relation => {\n                let reverseRelation = relation.reverseRelation;\n                return (\n                    reverseRelation &&\n                    reverseRelation.onDestroy === \"removeSelf\"\n                );\n            }\n        );\n\n        relationsToRemoveFrom.forEach(relation => {\n            let removeMethodName = relation.reverseRelation.removeMethodName;\n\n            if (relation.isHasMany) {\n                this[relation.propertyName].slice().forEach(relatedModel => {\n                    if (relatedModel[removeMethodName]) {\n                        relatedModel[removeMethodName](this);\n                    }\n                });\n            } else if (relation.isHasOne) {\n                // console.log(relation.propertyName, removeMethodName, this[relation.propertyName])\n                if (\n                    this[relation.propertyName] &&\n                    this[relation.propertyName][removeMethodName]\n                ) {\n                    this[relation.propertyName][removeMethodName](this);\n                }\n            }\n        });\n    }\n\n    toJSON() {\n        const { id, constructor } = this;\n        const { attributes, relations } = constructor;\n\n        // collect attributes\n        const attributeValues = Object.keys(attributes || {}).reduce(\n            (values, attributeName) => {\n                values[attributeName] = this[attributeName];\n                return values;\n            },\n            {}\n        );\n\n        // collect relation models id\n        const relationValues = (relations || []).reduce(\n            (values, { type, propertyName, foreignKey }) => {\n                const camelizedForeignKey = camelize(foreignKey, true);\n\n                if (type === \"hasMany\") {\n                    values[camelizedForeignKey] = (this[propertyName] || [])\n                        .slice()\n                        .map(model => model.id);\n                }\n\n                if (type === \"hasOne\") {\n                    values[camelizedForeignKey] = (this[propertyName] || {}).id;\n                }\n\n                return values;\n            },\n            {}\n        );\n\n        return {\n            id,\n            ...attributeValues,\n            ...relationValues\n        };\n    }\n}\n\nObject.defineProperty(BaseModel, \"urlRoot\", {\n    get: function() {\n        return this._urlRoot\n            ? this._urlRoot\n            : \"/\" + tableize(this.modelName || this.name);\n    },\n    set: function(value) {\n        this._urlRoot = value;\n    },\n    configurable: true\n});\n\nObject.defineProperty(BaseModel, \"jsonKey\", {\n    get: function() {\n        return this._jsonKey\n            ? this._jsonKey\n            : underscore(this.modelName || this.name);\n    },\n    set: function(value) {\n        this._jsonKey = value;\n    },\n    configurable: true\n});\n\nexport default BaseModel;\n"],"mappings":"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"}