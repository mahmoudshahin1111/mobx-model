{"version":3,"file":"set_relation.js","names":["_isArray","_interopRequireDefault","require","_includes","setRelation","options","arguments","length","undefined","ids","modelJson","relation","model","requestId","topLevelJson","isHasMany","isArray","Error","concat","propertyName","relatedModelIds","collection","attributes","forEach","relatedModelAttributes","Object","assign","id","relatedModel","setMethodName","push","slice","includes","removeMethodName","isHasOne","initialValue"],"sources":["../src/set_relation.js"],"sourcesContent":["import isArray from 'lodash/isArray';\r\nimport includes from 'lodash/includes';\r\n\r\nexport default function setRelation(options = {}) {  \r\n\r\n  let {\r\n    ids,\r\n    modelJson,\r\n    relation,\r\n    model,\r\n    requestId,\r\n    topLevelJson\r\n  } = options;\r\n\r\n  // console.log('setRelation', relation, ids, modelJson)\r\n\r\n  // if no ids and json was passed, do nothing\r\n  if (!modelJson && ids===undefined) return\r\n\r\n  if (relation.isHasMany) {\r\n\r\n    if ((ids && !isArray(ids)) || (modelJson && !isArray(modelJson))) {\r\n      throw new Error(`Expected json or ids for ${relation.propertyName} to be an array`);\r\n    }\r\n\r\n    let relatedModelIds = [];\r\n    let collection = model[relation.propertyName];\r\n\r\n    let attributes = modelJson ? modelJson : ids;\r\n\r\n    // add new relations to this model\r\n    attributes.forEach(relatedModelAttributes => {\r\n\r\n      // console.log('relatedModelAttributes', relatedModelAttributes)\r\n\r\n      let options = {\r\n        requestId,\r\n        topLevelJson\r\n      }\r\n\r\n      if (modelJson) {\r\n        Object.assign(options, { modelJson: relatedModelAttributes })\r\n      } else {\r\n        Object.assign(options, { id: relatedModelAttributes })\r\n      }\r\n\r\n      let relatedModel = model[relation.setMethodName](options);\r\n      \r\n      // can be undefined for example if we haven't found\r\n      // id in a separate store\r\n      if (relatedModel) {\r\n        relatedModelIds.push(relatedModel.id);\r\n      }\r\n      \r\n    });\r\n\r\n    // remove relations not in json\r\n    collection.slice().forEach(relatedModel => {\r\n      if (!includes(relatedModelIds, relatedModel.id)) {\r\n        model[relation.removeMethodName](relatedModel);\r\n      }\r\n    });\r\n\r\n  } else if (relation.isHasOne) {\r\n\r\n    let options = {\r\n      requestId,\r\n      topLevelJson\r\n    }\r\n\r\n    if (modelJson) {\r\n      Object.assign(options, { modelJson })\r\n    } else {\r\n      Object.assign(options, { id: ids })\r\n    }\r\n\r\n    // try to set relation\r\n    let relatedModel = model[relation.setMethodName](options);\r\n\r\n    // if no related model was returned then reset property\r\n    if (!relatedModel) {\r\n      model[relation.propertyName] = relation.initialValue;\r\n    }\r\n\r\n  }\r\n}"],"mappings":";;;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEe,SAASE,WAAWA,CAAA,EAAe;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE9C,IAAI;IACFG,GAAG;IACHC,SAAS;IACTC,QAAQ;IACRC,KAAK;IACLC,SAAS;IACTC;EACF,CAAC,GAAGT,OAAO;;EAEX;;EAEA;EACA,IAAI,CAACK,SAAS,IAAID,GAAG,KAAGD,SAAS,EAAE;EAEnC,IAAIG,QAAQ,CAACI,SAAS,EAAE;IAEtB,IAAKN,GAAG,IAAI,CAAC,IAAAO,gBAAO,EAACP,GAAG,CAAC,IAAMC,SAAS,IAAI,CAAC,IAAAM,gBAAO,EAACN,SAAS,CAAE,EAAE;MAChE,MAAM,IAAIO,KAAK,6BAAAC,MAAA,CAA6BP,QAAQ,CAACQ,YAAY,oBAAiB,CAAC;IACrF;IAEA,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAIC,UAAU,GAAGT,KAAK,CAACD,QAAQ,CAACQ,YAAY,CAAC;IAE7C,IAAIG,UAAU,GAAGZ,SAAS,GAAGA,SAAS,GAAGD,GAAG;;IAE5C;IACAa,UAAU,CAACC,OAAO,CAACC,sBAAsB,IAAI;MAE3C;;MAEA,IAAInB,OAAO,GAAG;QACZQ,SAAS;QACTC;MACF,CAAC;MAED,IAAIJ,SAAS,EAAE;QACbe,MAAM,CAACC,MAAM,CAACrB,OAAO,EAAE;UAAEK,SAAS,EAAEc;QAAuB,CAAC,CAAC;MAC/D,CAAC,MAAM;QACLC,MAAM,CAACC,MAAM,CAACrB,OAAO,EAAE;UAAEsB,EAAE,EAAEH;QAAuB,CAAC,CAAC;MACxD;MAEA,IAAII,YAAY,GAAGhB,KAAK,CAACD,QAAQ,CAACkB,aAAa,CAAC,CAACxB,OAAO,CAAC;;MAEzD;MACA;MACA,IAAIuB,YAAY,EAAE;QAChBR,eAAe,CAACU,IAAI,CAACF,YAAY,CAACD,EAAE,CAAC;MACvC;IAEF,CAAC,CAAC;;IAEF;IACAN,UAAU,CAACU,KAAK,CAAC,CAAC,CAACR,OAAO,CAACK,YAAY,IAAI;MACzC,IAAI,CAAC,IAAAI,iBAAQ,EAACZ,eAAe,EAAEQ,YAAY,CAACD,EAAE,CAAC,EAAE;QAC/Cf,KAAK,CAACD,QAAQ,CAACsB,gBAAgB,CAAC,CAACL,YAAY,CAAC;MAChD;IACF,CAAC,CAAC;EAEJ,CAAC,MAAM,IAAIjB,QAAQ,CAACuB,QAAQ,EAAE;IAE5B,IAAI7B,OAAO,GAAG;MACZQ,SAAS;MACTC;IACF,CAAC;IAED,IAAIJ,SAAS,EAAE;MACbe,MAAM,CAACC,MAAM,CAACrB,OAAO,EAAE;QAAEK;MAAU,CAAC,CAAC;IACvC,CAAC,MAAM;MACLe,MAAM,CAACC,MAAM,CAACrB,OAAO,EAAE;QAAEsB,EAAE,EAAElB;MAAI,CAAC,CAAC;IACrC;;IAEA;IACA,IAAImB,YAAY,GAAGhB,KAAK,CAACD,QAAQ,CAACkB,aAAa,CAAC,CAACxB,OAAO,CAAC;;IAEzD;IACA,IAAI,CAACuB,YAAY,EAAE;MACjBhB,KAAK,CAACD,QAAQ,CAACQ,YAAY,CAAC,GAAGR,QAAQ,CAACwB,YAAY;IACtD;EAEF;AACF"}