{"version":3,"file":"set_relation.js","names":["_isArray","_interopRequireDefault","require","_includes","obj","__esModule","default","setRelation","options","arguments","length","undefined","ids","modelJson","relation","model","requestId","topLevelJson","isHasMany","isArray","Error","concat","propertyName","relatedModelIds","collection","attributes","forEach","relatedModelAttributes","Object","assign","id","relatedModel","setMethodName","push","slice","includes","removeMethodName","isHasOne","initialValue"],"sources":["../src/set_relation.js"],"sourcesContent":["import isArray from 'lodash/isArray';\nimport includes from 'lodash/includes';\n\nexport default function setRelation(options = {}) {  \n\n  let {\n    ids,\n    modelJson,\n    relation,\n    model,\n    requestId,\n    topLevelJson\n  } = options;\n\n  // console.log('setRelation', relation, ids, modelJson)\n\n  // if no ids and json was passed, do nothing\n  if (!modelJson && ids===undefined) return\n\n  if (relation.isHasMany) {\n\n    if ((ids && !isArray(ids)) || (modelJson && !isArray(modelJson))) {\n      throw new Error(`Expected json or ids for ${relation.propertyName} to be an array`);\n    }\n\n    let relatedModelIds = [];\n    let collection = model[relation.propertyName];\n\n    let attributes = modelJson ? modelJson : ids;\n\n    // add new relations to this model\n    attributes.forEach(relatedModelAttributes => {\n\n      // console.log('relatedModelAttributes', relatedModelAttributes)\n\n      let options = {\n        requestId,\n        topLevelJson\n      }\n\n      if (modelJson) {\n        Object.assign(options, { modelJson: relatedModelAttributes })\n      } else {\n        Object.assign(options, { id: relatedModelAttributes })\n      }\n\n      let relatedModel = model[relation.setMethodName](options);\n      \n      // can be undefined for example if we haven't found\n      // id in a separate store\n      if (relatedModel) {\n        relatedModelIds.push(relatedModel.id);\n      }\n      \n    });\n\n    // remove relations not in json\n    collection.slice().forEach(relatedModel => {\n      if (!includes(relatedModelIds, relatedModel.id)) {\n        model[relation.removeMethodName](relatedModel);\n      }\n    });\n\n  } else if (relation.isHasOne) {\n\n    let options = {\n      requestId,\n      topLevelJson\n    }\n\n    if (modelJson) {\n      Object.assign(options, { modelJson })\n    } else {\n      Object.assign(options, { id: ids })\n    }\n\n    // try to set relation\n    let relatedModel = model[relation.setMethodName](options);\n\n    // if no related model was returned then reset property\n    if (!relatedModel) {\n      model[relation.propertyName] = relation.initialValue;\n    }\n\n  }\n}"],"mappings":";;;;;;AAAA,IAAAA,QAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAF,sBAAA,CAAAC,OAAA;AAAuC,SAAAD,uBAAAG,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAExB,SAASG,WAAWA,CAAA,EAAe;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE9C,IAAI;IACFG,GAAG;IACHC,SAAS;IACTC,QAAQ;IACRC,KAAK;IACLC,SAAS;IACTC;EACF,CAAC,GAAGT,OAAO;;EAEX;;EAEA;EACA,IAAI,CAACK,SAAS,IAAID,GAAG,KAAGD,SAAS,EAAE;EAEnC,IAAIG,QAAQ,CAACI,SAAS,EAAE;IAEtB,IAAKN,GAAG,IAAI,CAAC,IAAAO,gBAAO,EAACP,GAAG,CAAC,IAAMC,SAAS,IAAI,CAAC,IAAAM,gBAAO,EAACN,SAAS,CAAE,EAAE;MAChE,MAAM,IAAIO,KAAK,6BAAAC,MAAA,CAA6BP,QAAQ,CAACQ,YAAY,oBAAiB,CAAC;IACrF;IAEA,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAIC,UAAU,GAAGT,KAAK,CAACD,QAAQ,CAACQ,YAAY,CAAC;IAE7C,IAAIG,UAAU,GAAGZ,SAAS,GAAGA,SAAS,GAAGD,GAAG;;IAE5C;IACAa,UAAU,CAACC,OAAO,CAACC,sBAAsB,IAAI;MAE3C;;MAEA,IAAInB,OAAO,GAAG;QACZQ,SAAS;QACTC;MACF,CAAC;MAED,IAAIJ,SAAS,EAAE;QACbe,MAAM,CAACC,MAAM,CAACrB,OAAO,EAAE;UAAEK,SAAS,EAAEc;QAAuB,CAAC,CAAC;MAC/D,CAAC,MAAM;QACLC,MAAM,CAACC,MAAM,CAACrB,OAAO,EAAE;UAAEsB,EAAE,EAAEH;QAAuB,CAAC,CAAC;MACxD;MAEA,IAAII,YAAY,GAAGhB,KAAK,CAACD,QAAQ,CAACkB,aAAa,CAAC,CAACxB,OAAO,CAAC;;MAEzD;MACA;MACA,IAAIuB,YAAY,EAAE;QAChBR,eAAe,CAACU,IAAI,CAACF,YAAY,CAACD,EAAE,CAAC;MACvC;IAEF,CAAC,CAAC;;IAEF;IACAN,UAAU,CAACU,KAAK,CAAC,CAAC,CAACR,OAAO,CAACK,YAAY,IAAI;MACzC,IAAI,CAAC,IAAAI,iBAAQ,EAACZ,eAAe,EAAEQ,YAAY,CAACD,EAAE,CAAC,EAAE;QAC/Cf,KAAK,CAACD,QAAQ,CAACsB,gBAAgB,CAAC,CAACL,YAAY,CAAC;MAChD;IACF,CAAC,CAAC;EAEJ,CAAC,MAAM,IAAIjB,QAAQ,CAACuB,QAAQ,EAAE;IAE5B,IAAI7B,OAAO,GAAG;MACZQ,SAAS;MACTC;IACF,CAAC;IAED,IAAIJ,SAAS,EAAE;MACbe,MAAM,CAACC,MAAM,CAACrB,OAAO,EAAE;QAAEK;MAAU,CAAC,CAAC;IACvC,CAAC,MAAM;MACLe,MAAM,CAACC,MAAM,CAACrB,OAAO,EAAE;QAAEsB,EAAE,EAAElB;MAAI,CAAC,CAAC;IACrC;;IAEA;IACA,IAAImB,YAAY,GAAGhB,KAAK,CAACD,QAAQ,CAACkB,aAAa,CAAC,CAACxB,OAAO,CAAC;;IAEzD;IACA,IAAI,CAACuB,YAAY,EAAE;MACjBhB,KAAK,CAACD,QAAQ,CAACQ,YAAY,CAAC,GAAGR,QAAQ,CAACwB,YAAY;IACtD;EAEF;AACF"}