{"version":3,"file":"set_relations.js","names":["_set_relation","_interopRequireDefault","require","setRelations","options","arguments","length","undefined","model","modelJson","requestId","topLevelJson","constructor","relations","forEach","relation","embeddedJson","jsonKey","foreignKeys","foreignKey","Object","assign","ids","setRelation"],"sources":["../src/set_relations.js"],"sourcesContent":["import setRelation from './set_relation';\n\nexport default function setRelations(options = {}) {\n\n  let { model, modelJson, requestId, topLevelJson } = options;\n  \n  model.constructor.relations.forEach(relation => {\n\n    let embeddedJson = modelJson[relation.jsonKey];\n    let foreignKeys = modelJson[relation.foreignKey];\n\n    options = {\n      model,\n      relation,\n      requestId,\n      topLevelJson\n    }\n\n    if (embeddedJson) {\n      Object.assign(options, { modelJson: embeddedJson });\n    } else if (foreignKeys !== undefined) {\n      Object.assign(options, { ids: foreignKeys });\n    }\n\n    // console.log(relation.propertyName, attributes);\n    setRelation(options);\n\n  });\n\n}"],"mappings":";;;;;;;AAAA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEe,SAASC,YAAYA,CAAA,EAAe;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE/C,IAAI;IAAEG,KAAK;IAAEC,SAAS;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGP,OAAO;EAE3DI,KAAK,CAACI,WAAW,CAACC,SAAS,CAACC,OAAO,CAACC,QAAQ,IAAI;IAE9C,IAAIC,YAAY,GAAGP,SAAS,CAACM,QAAQ,CAACE,OAAO,CAAC;IAC9C,IAAIC,WAAW,GAAGT,SAAS,CAACM,QAAQ,CAACI,UAAU,CAAC;IAEhDf,OAAO,GAAG;MACRI,KAAK;MACLO,QAAQ;MACRL,SAAS;MACTC;IACF,CAAC;IAED,IAAIK,YAAY,EAAE;MAChBI,MAAM,CAACC,MAAM,CAACjB,OAAO,EAAE;QAAEK,SAAS,EAAEO;MAAa,CAAC,CAAC;IACrD,CAAC,MAAM,IAAIE,WAAW,KAAKX,SAAS,EAAE;MACpCa,MAAM,CAACC,MAAM,CAACjB,OAAO,EAAE;QAAEkB,GAAG,EAAEJ;MAAY,CAAC,CAAC;IAC9C;;IAEA;IACA,IAAAK,qBAAW,EAACnB,OAAO,CAAC;EAEtB,CAAC,CAAC;AAEJ"}